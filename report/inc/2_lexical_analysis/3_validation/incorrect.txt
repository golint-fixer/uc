Lexing "../../uc/testdata/incorrect/lexer/bad.c"

token  0:   token.Token{Kind:token.Comment, Val:"\t\t\t\t\t\t\t||\n**\tFile for testing lexical analysis\t\t||\n**\t\t\t\t\t\t\t||\n**\tThis file is 'lexically incorrect'.\t\t||\n", Pos:0}
token  1:   token.Token{Kind:token.Ident, Val:"int", Pos:114}
token  2:   token.Token{Kind:token.Ident, Val:"main", Pos:118}
token  3:   token.Token{Kind:token.Lparen, Val:"(", Pos:122}
token  4:   token.Token{Kind:token.Ident, Val:"void", Pos:123}
token  5:   token.Token{Kind:token.Rparen, Val:")", Pos:127}
token  6:   token.Token{Kind:token.Lbrace, Val:"{", Pos:129}
token  7:   token.Token{Kind:token.Int, Val:"42", Pos:133}
token  8:   token.Token{Kind:token.Semicolon, Val:";", Pos:135}
token  9:   token.Token{Kind:token.Rbrace, Val:"}", Pos:137}

Lexing "../../uc/testdata/incorrect/lexer/good.c"

token  0:   token.Token{Kind:token.Comment, Val:"\t\t\t\t\t\t\t||\n**\tFile for testing lexical analysis\t\t||\n**\t\t\t\t\t\t\t||\n**\tThis file would confuse a parser, but\n        is 'lexically correct'.\t\t                ||\n", Pos:1}
token  1:   token.Token{Kind:token.Comment, Val:" ** / ** ", Pos:163}
token  2:   token.Token{Kind:token.Comment, Val:" Simple tokens and single characters:", Pos:179}
token  3:   token.Token{Kind:token.Lbrace, Val:"{", Pos:220}
token  4:   token.Token{Kind:token.Rbrace, Val:"}", Pos:222}
token  5:   token.Token{Kind:token.Comment, Val:" until end-of-line comment", Pos:248}
token  6:   token.Token{Kind:token.KwIf, Val:"if", Pos:277}
token  7:   token.Token{Kind:token.KwElse, Val:"else", Pos:280}
token  8:   token.Token{Kind:token.KwWhile, Val:"while", Pos:285}
token  9:   token.Token{Kind:token.Comment, Val:" normal comment ", Pos:311}

Lexing "../../uc/testdata/incorrect/lexer/long-char.c"

token  0:   token.Token{Kind:token.Ident, Val:"int", Pos:0}
token  1:   token.Token{Kind:token.Ident, Val:"main", Pos:4}
token  2:   token.Token{Kind:token.Lparen, Val:"(", Pos:8}
token  3:   token.Token{Kind:token.Ident, Val:"void", Pos:9}
token  4:   token.Token{Kind:token.Rparen, Val:")", Pos:13}
token  5:   token.Token{Kind:token.Lbrace, Val:"{", Pos:15}
token  6:   token.Token{Kind:token.Ident, Val:"char", Pos:19}
token  7:   token.Token{Kind:token.Ident, Val:"c", Pos:24}
token  8:   token.Token{Kind:token.Semicolon, Val:";", Pos:25}
token  9:   token.Token{Kind:token.Ident, Val:"c", Pos:29}

Lexing "../../uc/testdata/incorrect/lexer/ugly.c"

ERROR   0:   token.Token{Kind:token.Error, Val:"unexpected U+007C '|'", Pos:0}
token   1:   token.Token{Kind:token.Add, Val:"+", Pos:1}
ERROR   2:   token.Token{Kind:token.Error, Val:"unexpected U+0001", Pos:2}
ERROR   3:   token.Token{Kind:token.Error, Val:"unexpected U+0002", Pos:3}
ERROR   4:   token.Token{Kind:token.Error, Val:"unexpected U+0003", Pos:4}
ERROR   5:   token.Token{Kind:token.Error, Val:"unexpected U+0004", Pos:5}
ERROR   6:   token.Token{Kind:token.Error, Val:"unexpected U+0005", Pos:6}
ERROR   7:   token.Token{Kind:token.Error, Val:"unexpected U+0006", Pos:7}
ERROR   8:   token.Token{Kind:token.Error, Val:"unexpected U+0007", Pos:8}
ERROR   9:   token.Token{Kind:token.Error, Val:"unexpected U+0008", Pos:9}

